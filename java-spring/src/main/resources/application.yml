# tomcat 서버 포트 8090 으로 실행
server:
  port: 8090

# Spring Security 설정
spring:
#  security:
#    user:
#      name: user
#      password: 1234
#    oauth2:
#      client:
#        registration:
#          google:
##            client-id: 1050483374297-fo1gpuaunqgbo3qt1bi9jsg8t180h3ut.apps.googleusercontent.com
##            client:-secret: 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
#            client-id: 12352134
#            client:-secret: asdfsadf
#            scope:
#              - email
#              - profile
  datasource:
    generate-unique-name: false

    #    MariaDB 연결
    url: jdbc:mariadb://localhost:3306/mydb
    driver-class-name: org.mariadb.jdbc.Driver
    username: root
    password: 1234

    #    MySQL 연결
    #    url: jdbc:mysql://localhost:3306/mydb  # mysql
    #    driver-class-name: com.mysql.cj.jdbc.Driver
    #    username: root
    #    password: 1234

  devtools:
    livereload:
      enabled: true
  jpa:
    show-sql: true
    defer-datasource-initialization: true # data.sql 사용을 위해서 필수적으로 등록
    properties:
      hibernate:
        format_sql: true  # SQL문을 pretty하게 보여줌
        use_sql_comments: true  # 주석을 달아주는 친구
    #    generate-ddl: true   # true , false  ## JPA 영역 ### ddl-auto 가 있으면 이거 없어도됨
    hibernate:
      ddl-auto: create   # create, create-drop, update , validate, none
  sql:
    init:
      mode: always  # always : embeded db가 아닌 외부 db 사용시 spring boot를 실행할때 마다 data.sql schema.sql import.sql 을 실행시켜준다.

# mybatis 설정
mybatis:
  mapper-locations: mybatis-mapper/**/*.xml
  configuration: 
    map-underscore-to-camel-case: true
#  type-aliases-package: com.thejoeun.practice1.boilerplate1.model.mapper  # xml 에 있는 모델 앞의 패키지명을 생략 가능하도록 지ㅜ언
  type-aliases-package: com.thejoeun.practice1.boilerplate1.model  # xml 에 있는 모델 앞의 패키지명을 생략 가능하도록 지ㅜ언

